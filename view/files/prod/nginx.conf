#定义Nginx运行的用户和用户组
user  nginx;
#nginx进程数，建议设置为等于CPU总核心数。
worker_processes  auto;
#全局错误日志定义类型，[ debug | info | notice | warn | error | crit ]
error_log  /var/log/nginx/error.log notice;
#进程pid文件
pid /var/run/nginx.pid;
#参考事件模型
events {
    #单个进程最大连接数（最大连接数=连接数*进程数）
    #根据硬件调整，和前面工作进程配合起来用，尽量大，但是别把cpu跑到100%就行。每个进程允许的最多连接数，理论上每台nginx服务器的最大连接数为。
    worker_connections  1024;
}
#设定http服务器，利用它的反向代理功能提供负载均衡支持
http {
    #文件扩展名与文件类型映射表
    include /etc/nginx/mime.types;
    #默认文件类型
    default_type  application/octet-stream;
    #日志格式
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    #日志路径
    access_log  /var/log/nginx/access.log  main;
    #sendfile指令指定 nginx 是否调用sendfile 函数（zero copy 方式）来输出文件，对于普通应用，必须设为on。
    # 如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络IO处理速度，降低系统uptime。
    sendfile on;
    #此选项允许或禁止使用socke的TCP_CORK的选项，此选项仅在使用sendfile的时候使用
    #tcp_nopush on;
    #长连接超时时间，单位是秒
    keepalive_timeout  180;
    #FastCGI相关参数是为了改善网站的性能：减少资源占用，提高访问速度。下面参数看字面意思都能理解。
    fastcgi_connect_timeout 3060;    
    fastcgi_send_timeout 360;    
    fastcgi_read_timeout 360;    
    fastcgi_buffer_size 64k;    
    fastcgi_buffers 4 64k;    
    fastcgi_busy_buffers_size 128k;    
    fastcgi_temp_file_write_size 128k;    
    #设置bodu大小
    client_max_body_size 100m;
    #上传文件大小限制
    client_header_buffer_size 10m; 
    #gzip  on;
    #负载均衡配置
    upstream oauth.com {
        #upstream的负载均衡，weight是权重，可以根据机器配置定义权重。weigth参数表示权值，权值越高被分配到的几率越大。
        ip_hash;
        server 1.2.3.4:8003;
    }
    #负载均衡配置
    upstream zuul.com {
        #upstream的负载均衡，weight是权重，可以根据机器配置定义权重。weigth参数表示权值，权值越高被分配到的几率越大。
        server 1.2.3.4:8001 weight=1;
    }
    #设置server的配置文件引用路径
    include /etc/nginx/conf.d/*.conf;
}
