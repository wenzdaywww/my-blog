<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.www.myblog.blog.data.mapper.BlogArticleMapper">
    <resultMap id="BaseResultMap" type="com.www.myblog.blog.data.entity.BlogArticleEntity">
        <!--@mbg.generated-->
        <!--@Table BLOG_ARTICLE-->
        <id column="BLOG_ID" property="blogId" />
        <result column="USER_ID" property="userId" />
        <result column="TITLE" property="title" />
        <result column="SUMMARY" property="summary" />
        <result column="COVER_IMG" property="coverImg" />
        <result column="CONTENT" property="content" />
        <result column="BROWSE" property="browse" />
        <result column="PRAISE" property="praise" />
        <result column="STATE_CD" property="stateCd" />
        <result column="COMMENT" property="comment" />
        <result column="UPDATE_TIME" property="updateTime" />
        <result column="CREATE_TIME" property="createTime" />
    </resultMap>
    <!--    获取用户博客列表-->
    <select id="findUserBlogList" resultType="com.www.myblog.blog.data.dto.BlogArticleDTO">
        SELECT A.BLOG_ID,
        A.TITLE,
        A.SUMMARY,
        A.COVER_IMG,
        A.BROWSE,
        A.COMMENT,
        A.PRAISE,
        BGI.GROUP_NAME,
        BTI.TAG_NAME,
        IFNULL( CO.COLLECT, 0 ) COLLECT,
        A.CREATE_TIME,
        A.UPDATE_TIME
        FROM (SELECT B.BLOG_ID,B.TITLE,B.SUMMARY,B.COVER_IMG,B.BROWSE,B.COMMENT,B.PRAISE,B.UPDATE_TIME,B.CREATE_TIME FROM BLOG_ARTICLE B WHERE B.USER_ID = #{query.userId} AND B.STATE_CD = '1') A
        LEFT JOIN (SELECT BC.BLOG_ID,COUNT( BC.COLLECT_ID ) COLLECT FROM BLOG_COLLECT BC GROUP BY BC.BLOG_ID) CO ON CO.BLOG_ID = A.BLOG_ID
        LEFT JOIN (SELECT BG.BLOG_ID,GI.GROUP_NAME FROM BLOG_GROUP BG,GROUP_INFO GI WHERE BG.GROUP_ID=GI.GROUP_ID) BGI ON BGI.BLOG_ID = A.BLOG_ID
        LEFT JOIN (SELECT BT.BLOG_ID,GROUP_CONCAT( TI.TAG_NAME SEPARATOR ',' ) TAG_NAME FROM TAG_INFO TI,BLOG_TAG BT WHERE TI.TAG_ID = BT.TAG_ID  GROUP BY BT.BLOG_ID) BTI ON BTI.BLOG_ID=A.BLOG_ID
        <where>
            <if test="query.tagId != null and query.tagId > 0">
                AND EXISTS ( SELECT 1 FROM BLOG_TAG C WHERE C.USER_ID = #{query.userId} AND C.TAG_ID = #{query.tagId} AND C.BLOG_ID = A.BLOG_ID )
            </if>
            <if test="query.groupId != null and query.groupId > 0">
                AND EXISTS ( SELECT 1 FROM BLOG_GROUP G WHERE G.USER_ID = #{query.userId} AND G.GROUP_ID = #{query.groupId} AND G.BLOG_ID = A.BLOG_ID )
            </if>
            <if test="query.tagId != null and query.tagId lt 0">
                AND NOT EXISTS ( SELECT 1 FROM BLOG_TAG C WHERE C.USER_ID = #{query.userId} AND C.BLOG_ID = A.BLOG_ID )
            </if>
            <if test="query.groupId != null and query.groupId lt 0">
                AND NOT EXISTS ( SELECT 1 FROM BLOG_GROUP G WHERE G.USER_ID = #{query.userId} AND G.BLOG_ID = A.BLOG_ID )
            </if>
        </where>
    </select>
    <!--    获取推荐博客列表-->
    <select id="findTipBlogList" resultType="com.www.myblog.blog.data.dto.BlogArticleDTO">
        SELECT A.BLOG_ID,
               A.TITLE,
               A.SUMMARY,
               A.COVER_IMG,
               A.BROWSE,
               A.COMMENT,
               A.PRAISE,
               IFNULL( CO.COLLECT, 0 ) COLLECT,
               DATE_FORMAT(A.CREATE_TIME,'%Y-%m-%d') CREATE_DATE
        FROM (SELECT B.BLOG_ID,B.TITLE,B.SUMMARY,B.COVER_IMG,B.BROWSE,B.COMMENT,B.PRAISE,B.CREATE_TIME FROM BLOG_ARTICLE B WHERE B.STATE_CD = '1') A
           LEFT JOIN (SELECT BC.BLOG_ID,COUNT( BC.COLLECT_ID ) COLLECT FROM BLOG_COLLECT BC GROUP BY BC.BLOG_ID) CO ON CO.BLOG_ID = A.BLOG_ID
        ORDER BY A.PRAISE DESC
    </select>
    <!--    根据博客ID查询博客信息-->
    <select id="findArticle" resultType="com.www.myblog.blog.data.dto.BlogArticleDTO">
        SELECT B.BLOG_ID,
               B.TITLE,
               B.CONTENT,
               B.BROWSE,
               B.PRAISE,
               B.COMMENT,
               GR.GROUP_ID,
               GR.GROUP_NAME,
               B.CREATE_TIME
        FROM BLOG_ARTICLE B
        LEFT JOIN (SELECT BG.BLOG_ID,G.GROUP_ID,G.GROUP_NAME FROM BLOG_GROUP BG,GROUP_INFO G WHERE G.GROUP_ID=BG.GROUP_ID) GR ON GR.BLOG_ID = B.BLOG_ID
        WHERE B.BLOG_ID = #{blogId}
    </select>
    <!--    获取博主博客列表-->
    <select id="findAuthorBlogList" resultType="com.www.myblog.blog.data.dto.BlogArticleDTO">
        SELECT A.BLOG_ID,
               A.TITLE,
               A.SUMMARY,
               A.COVER_IMG,
               A.BROWSE,
               A.COMMENT,
               A.PRAISE,
               IFNULL( CO.COLLECT, 0 ) COLLECT,
               DATE_FORMAT(A.CREATE_TIME,'%Y-%m-%d') CREATE_DATE
        FROM (SELECT B.BLOG_ID,B.TITLE,B.SUMMARY,B.COVER_IMG,B.BROWSE,B.COMMENT,B.PRAISE,B.UPDATE_TIME,B.CREATE_TIME FROM BLOG_ARTICLE B WHERE B.USER_ID = #{query.userId} AND B.STATE_CD = '1') A
        LEFT JOIN (SELECT BC.BLOG_ID,COUNT( BC.COLLECT_ID ) COLLECT FROM BLOG_COLLECT BC GROUP BY BC.BLOG_ID) CO ON CO.BLOG_ID = A.BLOG_ID
        <where>
            <if test="query.tagId != null and query.tagId > 0">
               AND EXISTS ( SELECT 1 FROM BLOG_TAG C WHERE C.USER_ID = #{query.userId} AND C.TAG_ID = #{query.tagId} AND C.BLOG_ID = A.BLOG_ID )
            </if>
            <if test="query.groupId != null and query.groupId > 0">
                AND EXISTS ( SELECT 1 FROM BLOG_GROUP G WHERE G.USER_ID = #{query.userId} AND G.GROUP_ID = #{query.groupId} AND G.BLOG_ID = A.BLOG_ID )
            </if>
            <if test="query.tagId != null and query.tagId lt 0">
                AND NOT EXISTS ( SELECT 1 FROM BLOG_TAG C WHERE C.USER_ID = #{query.userId} AND C.BLOG_ID = A.BLOG_ID )
            </if>
            <if test="query.groupId != null and query.groupId lt 0">
                AND NOT EXISTS ( SELECT 1 FROM BLOG_GROUP G WHERE G.USER_ID = #{query.userId} AND G.BLOG_ID = A.BLOG_ID )
            </if>
        </where>
    </select>
    <!-- 获取热门博客前10名单-->
    <select id="findHotBlogRank" resultType="com.www.myblog.blog.data.dto.BlogArticleDTO">
        SELECT B.BLOG_ID,B.TITLE FROM BLOG_ARTICLE B WHERE B.STATE_CD = '1' ORDER BY B.BROWSE DESC,B.BLOG_ID LIMIT 10
    </select>
    <!--  根据博主ID查询博主的相关统计信息-->
    <select id="findAuthorCount" resultType="com.www.myblog.blog.data.dto.AuthorDTO">
        SELECT U.USER_ID,
               IFNULL(G.BLOG,0) BLOG,
               IFNULL(G.PRAISE,0) PRAISE,
               IFNULL(G.COMMENT,0) COMMENT,
               IFNULL(D.COLLECTS,0) COLLECT,
               IFNULL(A.FANS,0) FANS,
               IFNULL(B.FOLLOW,0) FOLLOW
        FROM ( SELECT #{userId} USER_ID FROM DUAL ) U
          LEFT JOIN (SELECT B.USER_ID, COUNT( B.BLOG_ID ) BLOG, SUM( B.PRAISE ) PRAISE,
                     SUM( B.COMMENT ) COMMENT FROM BLOG_ARTICLE B  WHERE B.USER_ID = #{userId} AND B.STATE_CD = '1' GROUP BY B.USER_ID) g ON g.USER_ID = U.USER_ID
          LEFT JOIN ( SELECT C.USER_ID, COUNT( C.COLLECT_ID ) COLLECTS FROM BLOG_COLLECT C WHERE C.USER_ID = #{userId} GROUP BY C.USER_ID ) D ON D.USER_ID = u.USER_ID
          LEFT JOIN ( SELECT L.USER_ID, COUNT( L.UF_ID ) FANS FROM USER_FANS L WHERE L.USER_ID = #{userId} GROUP BY L.USER_ID ) A ON A.USER_ID = U.USER_ID
          LEFT JOIN ( SELECT F.FANS_ID, COUNT( F.UF_ID ) FOLLOW FROM USER_FANS F WHERE F.FANS_ID = #{userId} GROUP BY F.USER_ID ) B ON B.FANS_ID = U.USER_ID
    </select>
</mapper>