<?xml version="1.0" encoding="UTF-8"?>
<!-- 日志级别从低到高分为TRACE < DEBUG < INFO < WARN < ERROR < FATAL，如果设置为WARN，则低于WARN的信息都不会输出 -->
<!-- scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true -->
<!-- scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
<!-- debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="true">
    <!-- 应用名 -->
    <springProperty scope="context" name="SERVER_NAME" source="spring.application.name"/>
    <!-- 日志输出格式和颜色【控制台】 -->
    <property name="CONSOLE_LOG_COLOR" value="%date{yyyy-MM-dd HH:mm:ss:sss} %red([traceId=%X{traceId}]) %highlight(%level) %logger %green(%file.%M:%line) => %m%n"/>
    <!-- 日志格式 -->
    <property name="LOG_PATTERN" value="%date [traceId=%X{traceId}] %level %logger %file.%M:%line => %msg%n"/>
    <!--输出到控制台-->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <!--此日志appender是为开发使用，只配置最底级别，控制台输出的日志级别是大于或等于此级别的日志信息-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>debug</level>
        </filter>
        <encoder>
            <pattern>${CONSOLE_LOG_COLOR}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
    <root level="info">
        <appender-ref ref="CONSOLE"/>
    </root>
</configuration>